inference:
  module: 'torchvision.models.detection'
  class: 'retinanet_resnet50_fpn'
  label_map: './data_collection/coco_mapping.json'
  output_shape: [100, 6]
  normalization:
    mean: [0., 0., 0.]
    std: [1., 1., 1.]
  resolution: [500, 500]
  uid_to_targets: './data_collection/uid_to_IN.json'
  args:
    pretrained: True
evaluation:
  module: "threedb.evaluators.detection"
  args:
    iou_threshold: 0.5
render_args:
  engine: 'threedb.rendering.blender'
  resolution: 500
  with_segmentation: True
  samples: 16
policy:
  module: "threedb.policies.random_search"
  samples: 10
controls:
  - module: "background"
    S: .4
    V: .4
  - module: "camera"
    view_point_x: (-.5, .5)
    view_point_y: -1
    view_point_z: (-.2, 1.)
    zoom_factor: (0.3, 1.2)
    aperture: 8
    focal_length: 50
